# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
  - job: "Build_Test"
    pool:
      name: 'Linux'    
    steps:
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: 'docker run --rm -v $(pwd):/src mcr.microsoft.com/dotnet/core/sdk:3.1 dotnet build /src/Gcsb.Connect.ResiliencePolicies/Gcsb.Connect.ResiliencePolicies.csproj'
          workingDirectory: 'src/'
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: 'docker run --rm -v $(pwd):/src -e FAKE=true mcr.microsoft.com/dotnet/core/sdk:3.1 dotnet test /src/Gcsb.Connect.ResiliencePolicies.Tests/Gcsb.Connect.ResiliencePolicies.Tests.csproj'
          workingDirectory: 'src/'       

  - job: "Pack"
    pool:
      name: 'Linux'    
    condition: and(succeeded(), eq(variables['generatePackage'], 'true'))
    dependsOn:
      - Build_Test
    steps:
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: 'docker run --rm -v $(pwd):/src mcr.microsoft.com/dotnet/core/sdk:3.1 dotnet pack /src/Gcsb.Connect.ResiliencePolicies/Gcsb.Connect.ResiliencePolicies.csproj -p:Version=$(major).$(minor).$(patch)'
          workingDirectory: 'src/'          
      - task: NuGetCommand@2
        inputs:
          command: 'push'
          packagesToPush: '$(Build.SourcesDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
          nuGetFeedType: 'internal'
          publishVstsFeed: 'ecdd7cf8-8892-485d-868b-1ece4fdbf149'